{"version":3,"sources":["logo.svg","components/Tarea.jsx","Clase01/Mod01/Mod01.jsx","Clase01/Mod02/Mod02.jsx","Clase01/Mod03/Mod03.jsx","Clase01/Mod04/Mod04.jsx","Clase01/Clas01.jsx","Clase02/Mod01/TableJSX.jsx","Clase02/Mod01/Mod01.jsx","Clase02/Mod02/Mod02.jsx","Clase02/Mod03/Mod03.jsx","Clase02/Mod04/Mod04.jsx","Clase02/Clase02.jsx","Clase03/Mod01/Mod01.jsx","Clase03/Mod02/Mod02.jsx","Clase03/Mod03/Mod03.jsx","Clase03/Mod04/Mod04.jsx","Clase03/Clase03.jsx","Clase04/Mod01/Mod01.jsx","Clase04/Mod02/Mod02.jsx","Clase04/Mod03/Mod03.jsx","Clase04/Mod04/Mod04.jsx","Clase04/Clase04.jsx","App.js","reportWebVitals.js","index.js"],"names":["Tarea","language","code","title","number","description","children","className","Mod01","trim","Mod02","Mod03","Mod04","Clase01","info","content","html","jsx","TableJSX","map","d","i","Clase02","type","frameborder","style","width","height","src","description01","Clase03","Clase04","NavItem","to","n","activeClassName","exact","App","location","useLocation","React","useEffect","hljs","highlightAll","LogoSvg","alt","path","Info","clase01","clase02","clase03","clase04","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.1d9b7883.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import ReactMarkdown from 'react-markdown'\n\nconst Tarea = ({ language, code, title, number, description, children }) => {\n    return (\n        <div>\n            {title && (\n                <h3><span className=\"badge rounded-pill bg-primary\">{number}</span> {title}</h3>\n            )}\n            <ReactMarkdown>{description}</ReactMarkdown>\n            {code && (\n                <div>\n                    <pre><code className={language}>{code}</code></pre>\n                </div>\n            )}\n            {children}\n            <hr />\n        </div>\n    )\n}\n\nexport default Tarea\n","import Tarea from '../../components/Tarea'\n\nconst title = 'CONFIGURACIÓN ENTORNO DE TRABAJO'\n\nconst desc01 = `\nSiempre instalar versiones con  soporte a largo plazo (LTS -Long Term Support)\n\n**Node.js** es un entorno en tiempo de ejecución multiplataforma, de código abierto, para la capa del servidor basado en el lenguaje de programación JavaScript, asíncrono, con E/S de datos en una arquitectura orientada a eventos y basado en el motor V8 de Google.\n\n[https://nodejs.org/es/](https://nodejs.org/es/)\n`\n\nconst desc03 = `\nGitHub es una forja (plataforma de desarrollo colaborativo) para alojar proyectos utilizando el sistema de control de versiones Git.\n\n[https://github.com](https://github.com/join?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F&source=header-home)\n`\n\nconst code05 = `\ngit init # inicializa un repositorio\ngit add . # prepara todos los archivos que contangan cambios para ser subidos al repositorio en Github\ngit add status # muestra el estado de los archivos en el repositior Local\ngit commit -m 'Mensaje que describa lo que se esta subiendo' # Indicamos de que se trata lo que se va a subir a Github\ngit push origin main # sube el código agregado a Gihub\ngit remote add origin your_repo.git\n`\n\nconst Mod01 = () => {\n\n    return (\n        <div>\n            <h2>{title}</h2>\n            <div>\n                <Tarea\n                    language=\"bash\"\n                    code={`\nnpm init\n\n// package.json\n// agregar en script\n\"start\": \"node index.js\"\n\n// index.js\nconsole.log('Hola mundo');\n\nnpm run start\n`.trim()}\n                    title=\"Instalar NodeJS y NPM (Node Package Manager)\"\n                    number=\"1\"\n                    description={desc01.trim()}\n                />\n                <Tarea\n                    language=\"bash\"\n                    title=\"Instalar GIT\"\n                    number=\"2\"\n                    description={`\n**Git** es un sistema de control de versiones distribuido de código abierto y gratuito diseñado para manejar todo, desde proyectos pequeños a muy grandes, con velocidad y eficiencia.\n\n[https://git-scm.com/](https://git-scm.com/)\n`.trim()}\n                />\n                <Tarea\n                    language=\"bash\"\n                    title=\"Instalar Visual Studio Code\"\n                    number=\"3\"\n                    description={`\nVisual Studio Code es un editor de código fuente desarrollado por Microsoft para Windows, Linux y macOS. Incluye soporte para la depuración, control integrado de Git, resaltado de sintaxis, finalización inteligente de código, fragmentos y refactorización de código.\n\n[https://code.visualstudio.com/](https://code.visualstudio.com/)\n`.trim()}\n                />\n                <Tarea\n                    language=\"text\"\n                    title=\"Crear cuenta Github\"\n                    number=\"4\"\n                    description={desc03.trim()}\n                >\n                    <strong>Pasos</strong>\n                    <ul className=\"list-group list-group-flush\">\n                        <li className=\"list-group-item\">1) Crear repositorio</li>\n                        <li className=\"list-group-item\">2) Clonar repositorio o agregar repositorio a proyecto existente</li>\n                        <li className=\"list-group-item\">3) Abrir VS Code</li>\n                        <li className=\"list-group-item\">4) Abrir Proyecto clonado</li>\n                    </ul>\n                </Tarea>\n                <Tarea\n                    language=\"bash\"\n                    code={'npm install -g create-react-app'}\n                    title=\"Instalar Create React App\"\n                    number=\"5\"\n                    description={'[https://github.com/facebook/create-react-app](https://github.com/facebook/create-react-app)'}\n                ></Tarea>\n                <Tarea\n                    language=\"bash\"\n                    code={code05.trim()}\n                    title=\"Primeros pasos con GIT\"\n                    description={'[https://www.atlassian.com/es/git/tutorials/learn-git-with-bitbucket-cloud](https://www.atlassian.com/es/git/tutorials/learn-git-with-bitbucket-cloud)'}\n                    number=\"6\"\n                ></Tarea>\n            </div>\n        </div>\n    )\n}\n\nexport default Mod01\n","import Tarea from '../../components/Tarea'\n\nconst title = 'NIVELACIÓN DE JAVASCRIPT ES6'\n\nconst desc01 = `\n**let** te permite declarar variables limitando su alcance (scope) al bloque, declaración, o expresión donde se está usando. a **diferencia** de la palabra clave **var** la cual define una variable global o local en una función sin importar el ámbito del bloque.\n`\n\nconst desc02 = `\nDescripción. Esta declaración crea una constante cuyo alcance puede ser global o local para el bloque en el que se declara. Es necesario inicializar la constante, es decir, se debe especificar su valor en la misma sentencia en la que se declara, lo que tiene sentido, dado que no se puede cambiar posteriormente.\n`\n\nconst code01_01 = `\nvar a = 5;\nvar b = 10;\n \nif (a === 5) {\n  let a = 4; // El alcance es dentro del bloque if\n  var b = 1; // El alcance es dentro de la función\n \n  console.log(a);  // 4\n  console.log(b);  // 1\n}\n \nconsole.log(a); // 5\nconsole.log(b); // 1\n`\n\nconst code01_02 = `\nlet a = 5;\nlet b = 10;\n \nif (a === 5) {\n  let a = 4; // El alcance es dentro del bloque if\n  var b = 1; // El alcance es dentro de la función\n \n  console.log(a);  // 4\n  console.log(b);  // 1\n}\n \nconsole.log(a); // 5\nconsole.log(b); // 1\n// Uncaught SyntaxError: Identifier 'b' has already been declared\n`\n\nconst code02 = `\nconst a = 7;\n \nconsole.log(a); // 7\n`\n\nconst code03 = `\nconst miArray = [3, 4];\nconst arr = [1, 2, ...miArray, 5, 6];\n//const → [1, 2, 3, 4, 5, 6]\n\nconst obj1 = { a: 1, b: 2 };\nconst obj2 = {\n    a: 2,\n    c: 3,\n    ...obj1,\n};\n//cont → { a: 1, b: 2, c: 3 }\n\nfunction ejemplo (param1, param2, ...restParams) { \n    console.log(restParams);\n}\nejemplo('a','b','c','d','e','f');  \n//el resultado es el array [\"c\", \"d\", \"e\", \"f\"]\n`\n\nconst desc03 = `\nLa sintaxis extendida o spread syntax permite a un elemento iterable tal como un arreglo o cadena ser expandido en lugares donde cero o más argumentos (para llamadas de  función) o elementos (para Array literales) son esperados, o a un objeto ser expandido en lugares donde cero o más pares de valores clave (para literales Tipo Objeto) son esperados.\n`\n\nconst code04 = `\nlet a;\nlet b;\nlet rest;\n\nconst arr = [10, 20];\n[a, b] = arr;\n\nconsole.log(a);\n// salida esperada: 10\n\nconsole.log(b);\n// salida esperada: 20\n\n[a, b, ...rest] = [10, 20, 30, 40, 50];\n\nconsole.log(rest);\n// salida esperada: Array [30,40,50]\n`\n\nconst code05 = `\nclass Rectangulo {\n    constructor (alto, ancho) {\n      this.alto = alto;\n      this.ancho = ancho;\n    }\n    // Getter\n    get area() {\n       return this.calcArea();\n     }\n    // Método\n    calcArea () {\n      return this.alto * this.ancho;\n    }\n}\n  \nconst cuadrado = new Rectangulo(10, 10);\n  \nconsole.log(cuadrado.area); // 100\n`\n\nconst code06 = `\nclass Punto {\n    constructor ( x , y ){\n        this.x = x;\n        this.y = y;\n    }\n\n    static distancia ( a , b) {\n        const dx = a.x - b.x;\n        const dy = a.y - b.y;\n\n        return Math.sqrt ( dx * dx + dy * dy );\n    }\n}\n\nconst p1 = new Punto(5, 5);\nconst p2 = new Punto(10, 10);\n\nconsole.log (Punto.distancia(p1, p2)); // 7.0710678118654755\n`\n\nconst code07 = `\nclass Animal {\n    constructor(nombre) {\n      this.nombre = nombre;\n    }\n  \n    hablar() {\n      console.log(this.nombre + ' hace un ruido.');\n    }\n}\n  \nclass Perro extends Animal {\n    hablar() {\n        console.log(this.nombre + ' ladra.');\n    }\n}\n\nconst pug = new Perro('Cachupin');\npug.hablar()\n// Cachupin ladra.\n`\n\nconst Mod02 = () => {\n\n    return (\n        <div>\n            <h2>{title}</h2>\n            <div>\n                <Tarea\n                    language=\"js\"\n                    code={code01_01.trim()}\n                    title=\"var let\"\n                    number=\"1.1\"\n                    description={desc01.trim()}\n                />\n                <Tarea\n                    language=\"js\"\n                    code={code01_02.trim()}\n                    title=\"Cambiando var b a let b\"\n                    number=\"1.2\"\n                />\n                <Tarea\n                    language=\"js\"\n                    code={code02.trim()}\n                    title=\"const\"\n                    number=\"2\"\n                    description={desc02.trim()}\n                />\n                <Tarea\n                    language=\"js\"\n                    code={code03.trim()}\n                    title=\"spread operator\"\n                    number=\"3\"\n                    description={desc03.trim()}\n                />\n                <Tarea\n                    language=\"js\"\n                    code={code04.trim()}\n                    title=\"Asignación por Destructuring\"\n                    number=\"4\"\n                    description={'La sintaxis de **desestructuración** es una expresión de JavaScript que permite desempacar valores de arreglos o propiedades de objetos en distintas variables.'.trim()}\n                />\n                <Tarea\n                    language=\"js\"\n                    code={code05.trim()}\n                    title=\"Clases\"\n                    number=\"5\"\n                    description={'Las clases de javascript, introducidas en ECMAScript 2015, son una mejora sintáctica sobre la herencia basada en prototipos de JavaScript. La sintaxis de las clases no introduce un nuevo modelo de herencia orientada a objetos en JavaScript. Las clases de JavaScript proveen una sintaxis mucho más clara y simple para crear objetos y lidiar con la herencia.'.trim()}\n                />\n                <Tarea\n                    language=\"js\"\n                    code={code06.trim()}\n                    title=\"Clases con metodos estaticos\"\n                    number=\"6\"\n                />\n                <Tarea\n                    language=\"js\"\n                    code={code07.trim()}\n                    title=\"Clases y herencia\"\n                    number=\"7\"\n                />\n                <Tarea\n                    language=\"js\"\n                    code={`\nconst expresion = 12 + 12;\n\\`texto de cadena de caracteres\\`\n\n\\`línea 1 de la cadena de caracteres\nlínea 2 de la cadena de caracteres\\`\n\n\\`texto de cadena de caracteres $\\{expresión} texto adicional\\`\n\n\\`texto de cadena de caracteres $\\{expresión} texto adicional\\`\n`.trim()}\n                    title=\"Plantillas literales (plantillas de cadenas)\"\n                    description={`\nLas plantillas literales son cadenas literales que habilitan el uso de expresiones incrustadas. Con ellas, es posible utilizar cadenas de caracteres de más de una línea, y funcionalidades de interpolación de cadenas de caracteres.\n\nEn ediciones anteriores de la especificación ES2015, solían llamarse \"plantillas de cadenas de caracteres\".\n                    `}\n                    number=\"8\"\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Mod02\n","import Tarea from '../../components/Tarea'\n\nconst title = 'JAVASCRIPT FUNCIONAL (INMUTABILIDAD Y FUNCIONES PURAS)'\n\nconst code01 = `\nfunction funcionNormal (a, b) {\n    const r = a + b;\n    return r\n}\n\nconst functionAnonima = (a, b) {\n    const r = a + b;\n    return r\n}\n\nconst funcionFlecha = (a, b) =>  {\n    const r = a + b;\n    return r\n}\n\nconst funcionFlechaUnParametro = a =>  {\n    const r = a + a;\n    return r\n}\n\nconst funcionFlechaUnParametroUnaLinea = a =>  a + a;\n\nconst funcionFlechaDosParametrosUnaLinea = (a, b) =>  a + b;\n\n`\n\nconst code02 = `\n// función pura\nfunction funcionPura (a, b) {\n    const r = a + b;\n    return r\n}\n\n// función no pura\nconst c = 10;\n\nfunction funcionNoPura (a) {\n    const r = a + c;\n    return r\n}\n`\n\nconst Mod03 = () => {\n\n    return (\n        <div>\n            <h2>{title}</h2>\n            <div>\n                <Tarea\n                    language=\"js\"\n                    title=\"funciones flecha\"\n                    number=\"1\"\n                    description={'Una expresión de función flecha es una alternativa compacta a una expresión de función tradicional, pero es limitada y no se puede utilizar en todas las situaciones.'}\n                    code={code01.trim()}\n                />\n                <Tarea\n                    language=\"js\"\n                    title=\"funciones puras\"\n                    number=\"2\"\n                    description={'Una forma muy rápida y poco precisa de definir a las Funciones Puras sería decir que son aquellas que operan utilizando solo los parámetros de entrada sin recurrir a ningún otro elemento fuera de ellas.'}\n                    code={code02.trim()}\n                />\n                <Tarea\n                    language=\"js\"\n                    title=\"Inmutabilidad\"\n                    number=\"3\"\n                    description={'Un valor inmutable es un valor que no se puede cambiar luego de ser definido, se puede modificar pero debe ser en un objeto diferente..'}\n                />\n                <Tarea\n                    language=\"js\"\n                    title=\"Array\"\n                    number=\"4\"\n                    description=\"[https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array](https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array)\"\n                />\n                <Tarea\n                    language=\"js\"\n                    title=\"findIndex\"\n                    number=\"4.1\"\n                    description=\"Busca un elemento y retorna el índice del mismo\"\n                    code={`\nconst arr = ['a', 'b'];\nconsole.log(arr.findIndex(x => x === 'b')); // 1`.trim()}\n                />\n                <Tarea\n                    language=\"js\"\n                    title=\"every\"\n                    number=\"4.2\"\n                    description=\"Condición que siempre se debe cumplir\"\n                    code={`\nconst todosMayorA40 = (currentValue) => currentValue < 40;\n\nconst array1 = [1, 30, 39, 29, 10, 13];\n\nconsole.log(array1.every(todosMayorA40));\n\n// salida esperada: true`.trim()}\n                />\n                <Tarea\n                    language=\"js\"\n                    title=\"some\"\n                    number=\"4.3\"\n                    description=\"Condición que al menos se debe cumplir una vez\"\n                    code={`\nconst algunosMayorA40 = currentValue => currentValue < 40;\n\nconst array1 = [1, 30, 41, 29, 10, 13];\n\nconsole.log(array1.some(algunosMayorA40));\n\n// salida esperada: true`.trim()}\n                />\n                <Tarea\n                    language=\"js\"\n                    title=\"filter\"\n                    number=\"4.4\"\n                    description=\"crea un array nuevo a partir de los valores filtrados\"\n                    code={`\nconst words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];\n\nconst result = words.filter(word => word.length > 6);\n\nconsole.log(result);\n\n// expected output: Array [\"exuberant\", \"destruction\", \"present\"]`.trim()}\n                />\n                <Tarea\n                    language=\"js\"\n                    title=\"map\"\n                    number=\"4.5\"\n                    description=\"crea un array nuevo permitiendo modificar los valores anteriores\"\n                    code={`\nconst numbers = [1, 5, 10, 15];\nconst doubles = numbers.map(x => x * 2);\n\n// doubles ahora es [2, 10, 20, 30]\n// numbers se mantiene [1, 5, 10, 15]`.trim()}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Mod03\n","import Tarea from '../../components/Tarea'\n\nconst title = 'EJERCICIO PRÁCTICO'\n\nconst desc01 = `\n- Iniciar un proyecto npm\n- Crear un proyecto GIT\n- Agregar orígen al proyecto npm\n- Agregar index.js\n- Agregar index2.js\n- Agregar tarea \\`start\\` que ejecute index.js\n- Agregar tarea \\`start2\\` que ejecute index2.js\n- Crear una clase \\`Persona\\` que extienda de otra clase llamada \\`SerVivo\\`\n- Agregar metodo caminar a \\`SerVivo\\`\n\\`\\`\\`js\ncaminar (nombre) {\n    console.log('Ahora esta caminando: ' + nombre);\n}\n\\`\\`\\`\n\n- Agregar constructor a \\`Persona\\` que reciba el nombre de la persona\n- Agregar metodo \\`moverse\\` a la clase \\`Persona\\` que llame al metodo \\`caminar\\` de la clase \\`SerVivo\\` y que muestre el mensaje \\`Ahora esta caminando: Juanito\\`\n- En index.js crear una funcion por cada metodo del Array y probar su funcionamiento\n- Ejemplo de prueba\n\\`\\`\\`js\nfunction probandoMap () {\n    const arr = [1, 2, 3, 4];\n    const result = arr.map(x => x * 2)\n    console.log(result)\n}\nprobandoMap()\n\\`\\`\\`\n- Subir código a github y compartir link del proyecto por el grupo del curso\n`\n\nconst Mod04= () => {\n\n    return (\n        <div>\n            <h2>{title}</h2>\n            <div>\n                <Tarea\n                    language=\"js\"\n                    title=\"Probar lo aprendido\"\n                    number=\"1\"\n                    description={desc01.trim()}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Mod04\n","import Mod01 from './Mod01/Mod01'\nimport Mod02 from './Mod02/Mod02'\nimport Mod03 from './Mod03/Mod03'\nimport Mod04 from './Mod04/Mod04'\n\nconst Clase01 = ({ info }) => {\n    return (\n        <div>\n            <h1>{info.title}</h1>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod01 />\n                </div>\n            </div>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod02 />\n                </div>\n            </div>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod03 />\n                </div>\n            </div>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod04 />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Clase01\n","import { React } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst content = [\n  {\n    description: (\n      <>\n        Los estilos son un <code>json</code> y con formato{\" \"}\n        <code>camelCase</code>\n      </>\n    ),\n    html: `<div\n    style=\"font-size: 12px;color:red\"\n>Hola!</div>`,\n    jsx: `\n<div\n    style={{ fontSize: '12px', color: 'red' }}\n>Hola!</div>\n`,\n  },\n];\n\nconst TableJSX = () => (\n  <div className=\"table-responsive\">\n    <table className=\"table table-striped table-hover\">\n      <thead>\n        <tr>\n          <th>Descripción</th>\n          <th>HTML</th>\n          <th>JSX</th>\n        </tr>\n      </thead>\n      <tbody>\n        {content.map((d, i) => (\n          <tr key={i}>\n            <td>{d.description}</td>\n            <td>\n              <ReactMarkdown>{`\n\\`\\`\\`html\n${d.html.trim()}\n\\`\\`\\`\n`}</ReactMarkdown>\n            </td>\n            <td>\n              <ReactMarkdown>{`\n\\`\\`\\`jsx\n${d.jsx.trim()}\n\\`\\`\\`\n`}</ReactMarkdown>\n            </td>\n          </tr>\n        ))}\n        <tr>\n          <td>\n            clases css con<code> className</code>\n          </td>\n          <td>\n            <ReactMarkdown>{`\n\\`\\`\\`html\n<div\n    class=\"mt-2 col-12\"\n>Hola!</div>\n\\`\\`\\`\n`}</ReactMarkdown>\n          </td>\n          <td>\n            <ReactMarkdown>{`\n\\`\\`\\`jsx\n<div\n    className=\"mt-2 col-12\"\n>Hola!</div>\n\\`\\`\\`\n`}</ReactMarkdown>\n          </td>\n        </tr>\n        <tr>\n          <td>Cierre de TAG</td>\n          <td>\n            <ReactMarkdown>{`\n\\`\\`\\`html\n<input\n    value=\"\"\n    name=\"\"\n><br>\n\\`\\`\\`\n`}</ReactMarkdown>\n          </td>\n          <td>\n            <ReactMarkdown>{`\n\\`\\`\\`jsx\n<input\n    value=\"\"\n    name=\"\"\n/><br />\n\\`\\`\\`\n`}</ReactMarkdown>\n          </td>\n        </tr>\n        <tr>\n          <td>Valor en input debe ser una variable</td>\n          <td>\n            <ReactMarkdown>{`\n\\`\\`\\`html\n<input\n    value=\"\"\n    name=\"\"\n    >\n<br>\n\\`\\`\\`\n`}</ReactMarkdown>\n          </td>\n          <td>\n            <ReactMarkdown>{`\n\\`\\`\\`jsx\nconst title = 'Foo'\n<input\n    value={title}\n    name=\"\"\n/>\n<br />\n\\`\\`\\`\n`}</ReactMarkdown>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Eventos son una función y la propiedad se escribe con{\" \"}\n            <code>camelCase</code>\n          </td>\n          <td>\n            <ReactMarkdown>{`\n\\`\\`\\`html\nconst handleWelcome = () => {\n    alert('Hola!')\n};\n<button\n    onclick=\"handleWelcome()\">\n    Click here!\n</button>    \n\\`\\`\\`\n`}</ReactMarkdown>\n          </td>\n          <td>\n            <ReactMarkdown>{`\n\\`\\`\\`jsx\nconst handleWelcome = () => {\n    alert('Hola!')\n};\n<button\n    onClick={handleWelcome}>\n    Click here!\n</button>    \n\\`\\`\\`\n`}</ReactMarkdown>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n);\n\nexport default TableJSX;\n","import Tarea from \"../../components/Tarea\";\nimport TableJSX from \"./TableJSX\";\n\nconst title = \"INTRODUCCIÓN A REACT.JS\";\nconst code01 = `\ncreate-react-app <nombre_proyecto> --template typescript --use-npm # crea un nuevo proyecto ReactJS con TypeScript\ncreate-react-app <nombre_proyecto> --use-npm # crea un nuevo proyecto ReactJS\nnpm run start # inicia applicacion en puerto 3000\nnpm run build # genera los archivos estaticos para desplegar en un servidor productivo\nnpm run test # ejecuta las pruebas\nnpm run eject # extrae las configuraciones para personalizar webpack\n`;\nconst desc02 = `\nReact acepta el hecho de que la lógica de renderizado está intrínsecamente unida a la lógica de la interfaz de usuario: cómo se manejan los eventos, cómo cambia el estado con el tiempo y cómo se preparan los datos para su visualización.\n\nEn lugar de separar artificialmente tecnologías poniendo el maquetado y la lógica en archivos separados, React separa intereses con unidades ligeramente acopladas llamadas “componentes” que contienen ambas. Volveremos a los componentes en otra sección, pero si aún no te sientes cómodo maquetando en JS, esta charla podría convencerte de lo contrario.\n`;\n\nconst codeCssModule = `\n/* Foo.module.css */\n.Header {\n    color: red;\n}\n\n// Foo.tsx\nimport styles from './Foo.module.css'\n\nconst Foo = () => (<div>\n    <header className={styles.Header}>Header</header>\n</div>)\n\nexport default Foo\n`;\n\nconst codeTypescript = `\n\n// Tipos mas utilizados\n// string, boolean, number, Array<> o [], Date, any\n\n// Ejemplo\ntype Person = {\n    name: string;\n    age: number;\n    phones: string[];\n}\n\nconst Person1 = {\n    name: 'Clod',\n    age: 18,\n    phones: ['934453321', '967786554'],\n}\n\ntype Item = {\n    id: number,\n    title: string\n}\n\n// Los tipos y las interfaces hacen casi lo mismo\n// Pero semanticamente corresponde una interface cuando\n// se utilizan componentes ya que los componentes son implementables\ninterface CardProps {\n    color: string,\n    items: Item[],\n}\n\nconst Card = (props: CardProps) => ()\n`;\n\nconst Mod01 = () => {\n  return (\n    <div>\n      <h2>{title}</h2>\n      <div>\n        <Tarea\n          language=\"bash\"\n          code={code01.trim()}\n          title=\"Iniciar nuevo un nuevo proyecto\"\n          number=\"1\"\n          description={\"\"}\n        />\n        <Tarea\n          language=\"jsx\"\n          code={`const element = <h1>Hello, world!</h1>;`.trim()}\n          title=\"¿Por qué JSX?\"\n          number=\"2\"\n          description={desc02.trim()}\n        />\n        <Tarea language=\"jsx\" title=\"Diferencias notables con HTML\" number=\"3\">\n          <TableJSX />\n        </Tarea>\n        <Tarea\n          language=\"jsx\"\n          code={`import './Foo.css'`.trim()}\n          title=\"Utilizar CSS\"\n          number=\"4.1\"\n        />\n        <Tarea\n          language=\"jsx\"\n          code={codeCssModule.trim()}\n          title=\"Utilizar CSS Module (React 17)\"\n          number=\"4.2\"\n        />\n        <Tarea\n          language=\"jsx\"\n          code={`import Image from './Image.jpg'`.trim()}\n          title=\"Utilizar Imágenes\"\n          number=\"4.3\"\n        />\n        <Tarea\n          language=\"jsx\"\n          code={`import Image from './Image.svg'`.trim()}\n          title=\"Utilizar SVG\"\n          number=\"4.4\"\n        />\n        <Tarea\n          language=\"json\"\n          code={`import data from './data.json'`.trim()}\n          title=\"Utilizar JSON\"\n          number=\"4.5\"\n        />\n        <Tarea\n          language=\"ts\"\n          code={codeTypescript.trim()}\n          title=\"TypeScript\"\n          number=\"4.6\"\n          description=\"TypeScript es un lenguaje de programación libre y de código abierto desarrollado y mantenido por Microsoft. Es un superconjunto de JavaScript, que esencialmente añade tipos estáticos y objetos basados en clases.\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Mod01;\n","import Tarea from '../../components/Tarea'\n\nconst title = 'COMPONENTES FUNCIONALES'\n\nconst code01 = `\nconst MainComponent = () => {\n    const title = 'Main Component'\n    const handleClick = () => {\n        alert('Hola!')\n    }\n    \n    return (\n        <div className=\"main-component\">\n            {title}\n            <button onClick={handleClick}>Press Here!</button>\n            <Component01 />\n            <Component02 />\n        </div>\n    )\n}\n`\n\nconst code02 = `\n/*\nsrc\n |- Component01.css\n |- Component01.jxs\n |- Component02.jxs\n |- MainComponent.jxs\n*/\n\n// Component01.css\n\n.component-01 {\n    color: red;\n}\n\n// Component01.jsx\nimport './Component01.css'\nconst Component01 = ({ title }) => {\n    return (\n        <div className=\"component-01\">Comp 01 {title}</div>\n    )\n}\n\nexport default Component01\n\n// Component02.jsx\nconst Component02 = () => {\n    return (\n        <div>Comp 02</div>\n    )\n}\n\nexport default Component02\n\n// MainComponent.jsx\nimport Component01 from './Component01'\nimport Component02 from './Component02'\n\nconst MainComponent = () => {\n    const title = 'Main Component'\n    const handleClick = () => {\n        alert('Hola!')\n    }\n    \n    return (\n        <div className=\"main-component\">\n            {title}\n            <button onClick={handleClick}>Press Here!</button>\n            <Component01 title=\"Foo\" />\n            <Component02 />\n        </div>\n    )\n}\n\nexport default MainComponent\n`\n\nconst desc03 = `\n\\`\\`\\`bash\nsrc\n |- index.js\n |- App.js\n |- components\n |   |- item-primary\n |       |- ItemPrimary.jsx\n |       |- ItemPrimary.css\n |- container\n |   |- home\n |       |- Home.jsx\n |       |- Home.css\n\\`\\`\\`\n`\n\nconst Mod02 = () => {\n\n    return (\n        <div>\n            <h2>{title}</h2>\n            <div>\n                <Tarea\n                    language=\"jsx\"\n                    code={code01.trim()}\n                    title=\"Un componente por dentro\"\n                    number=\"1\"\n                    description={''}\n                />\n                <Tarea\n                    language=\"jsx\"\n                    code={code02.trim()}\n                    title=\"Diseño de software basado en Composición sobre Herencia\"\n                    number=\"2\"\n                    description={''}\n                />\n                <Tarea\n                    language=\"jsx\"\n                    title=\"Container v/s Component\"\n                    number=\"3\"\n                    description={desc03.trim()}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Mod02\n","import Tarea from '../../components/Tarea'\n\nconst title = 'MANEJO DE ESTADO CON HOOKS'\n\nconst code02 = `\nimport React, { useState } from 'react';\n\nfunction Example() {\n  // Declaración de una variable de estado que llamaremos \"count\"\n  const [count, setCount] = useState(0);\n\n  return (\n      <div>\n        <p>You clicked {this.state.count} times</p>\n        <button onClick={() => setCount(count + 1)}>\n            Click me\n        </button>\n      </div>\n  )\n}\n`\n\nconst code03 = `\nimport React, { useState, useEffect } from 'react';\n\nfunction Example() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    document.title = \\`You clicked $\\{count} times\\`;\n  });\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n`\n\nconst code04 = `\nconst refContainer = useRef(initialValue);\n\nfunction TextInputWithFocusButton() {\n  const inputEl = useRef(null);\n  const onButtonClick = () => {\n    // \\`current\\` apunta al elemento de entrada de texto montado\n    inputEl.current.focus();\n  };\n  return (\n    <>\n      <input ref={inputEl} type=\"text\" />\n      <button onClick={onButtonClick}>Focus the input</button>\n    </>\n  );\n}\n`\n\nconst code05 = `\n// ThemeContext.tsx\nimport { createContext, useState } from 'react'\n\n/* Definimos tipos basicos */\ntype Theme = 'dark' | 'light'\n\ninterface IThemeContext {\n    theme: Theme\n    setTheme: (theme: Theme) => void,\n}\n\n/* Creamos un contexto tipado */\nconst ThemeContext = createContext<IThemeContext>({\n    theme: 'light',\n    setTheme: (_theme) => { },\n})\n\n/* generamos un proveedor que mantenga */\n/* el estado del contexto */\nexport const ThemeProvider = ({ children }: { children: JSX.Element }) => {\n    const [theme, setTheme] = useState<Theme>('light')\n    return (\n        <ThemeContext.Provider value={{\n            theme,\n            setTheme,\n        }}>\n            {children}\n        </ThemeContext.Provider>\n    )\n}\n\n/* Exportamos el contexto */\nexport default ThemeContext\n`\n\nconst Mod03 = () => {\n\n    return (\n        <div>\n            <h2>{title}</h2>\n            <div>\n                <Tarea\n                    language=\"bash\"\n                    code={``.trim()}\n                    title=\"hooks\"\n                    number=\"1.1\"\n                    description={'Hooks son una nueva característica en React 16.8. Estos te permiten usar el estado y otras características de React sin escribir una clase.'}\n                />\n                <Tarea\n                    language=\"jsx\"\n                    code={code02.trim()}\n                    title=\"useState\"\n                    number=\"1.2\"\n                    description={'¿Qué es un Hook? Un Hook es una función especial que permite “conectarse” a características de React. Por ejemplo, useState es un Hook que te permite añadir el estado de React a un componente de función. Más adelante hablaremos sobre otros Hooks.'}\n                />\n                <Tarea\n                    language=\"jsx\"\n                    code={code03.trim()}\n                    title=\"useEffect\"\n                    number=\"1.3\"\n                    description={'El Hook de efecto te permite llevar a cabo efectos secundarios en componentes funcionales'}\n                />\n                <Tarea\n                    language=\"jsx\"\n                    code={code04.trim()}\n                    title=\"useRef\"\n                    number=\"1.4\"\n                    description={'useRef devuelve un objeto ref mutable cuya propiedad .current se inicializa con el argumento pasado (initialValue). El objeto devuelto se mantendrá persistente durante la vida completa del componente.'}\n                />\n                <Tarea\n                    language=\"jsx\"\n                    code={code05.trim()}\n                    title=\"useContext\"\n                    number=\"1.5\"\n                    description={`Acepta un objeto de contexto (el valor devuelto de React.createContext) y devuelve el valor de contexto actual.\nEl valor actual del contexto es determinado por la propiedad value del \\`<MyContext.Provider>\\`\nascendentemente más cercano en el árbol al componente que hace la llamada.\n\n[ejemplo](https://github.com/docentedev/example-react-context)\n`}\n                />\n                <Tarea\n                    language=\"jsx\"\n                    code={`\n// App.tsx\nimport './App.css'\nimport Card from './components/card/Card'\nimport { ThemeProvider } from './contexts/ThemeContext'\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <div className=\"App\">\n        <Card />\n      </div>\n    </ThemeProvider>\n  )\n}\n\nexport default App`.trim()}\n                />\n                <Tarea\n                    language=\"jsx\"\n                    code={`\n// Card.tsx\nimport { useContext } from 'react'\nimport ThemeContext from '../../contexts/ThemeContext'\n\nconst Card = () => {\n    const ctx = useContext(ThemeContext)\n\n    const handleToggleTheme = () => {\n        ctx.setTheme(ctx.theme === 'dark' ? 'light' : 'dark')\n    }\n    return (\n        <div className={\\`card theme-$\\{ctx.theme}\\`}>\n            <div>\n                {ctx.theme}\n            </div>\n            <div>\n                <button onClick={handleToggleTheme}>Toggle Theme</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Card\n`.trim()}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Mod03\n","import Tarea from '../../components/Tarea'\n\nconst title = 'EJERCICIO PRÁCTICO'\n\nconst code01 = `\nconst [items, setItems] = useState(['item 1', 'item 2'])\n\n<div>\n    {items.map((item, index) => (\n        <div key={index}>{item}</div>\n    ))}\n</div>\n`\n\nconst code02 = `\nconst Item = ({ children }) => {\n    return (<div>{children}</div>)\n}\n\nconst [items, setItems] = useState(['item 1', 'item 2'])\n\n<div>\n    {items.map((item, index) => (\n        <Item key={index}>{item}</Item>\n    ))}\n</div>\n`\n\nconst code03 = `\nconst [name, setName] = useState('')\n\nconst handleChange = (event) => {\n    const value = event.target.value\n    setName(value)\n}\n\n<div>\n    <input value={name} onChange={handleChange}/>\n</div>\n`\n\nconst desc04 = `\n### Instalar y agregar bootstrap\n\n- \\`npm install bootstrap@5.0.0\\`\n- recordar que import de modulos siempre van primero\n- en index.js agregar luego de los import \\`import 'bootstrap/dist/css/bootstrap.min.css'\\`\n- Reglas\n    - identar código\n    - Utilzar la siguiente estructura de directorios\n\\`\\`\\`\nsrc\n |- index.js\n |- App.js\n |- components\n |   |- item-primary\n |       |- ItemPrimary.jsx\n |       |- ItemPrimary.css\n |- container\n |   |- home\n |       |- Home.jsx\n |       |- Home.css\n \\`\\`\\`\n - Crear componentes\n    - Footer\n    - Heaeder\n    - Menu\n    - SectionPrincipal\n    - SectionSecondary\n    - ContactForm\n - Utilizar al menos un componente con \\`css modules\\`\n`\n\nconst Mod04 = () => {\n\n    return (\n        <div>\n            <h2>{title}</h2>\n            <div>\n                <Tarea\n                    language=\"jsx\"\n                    code={code01.trim()}\n                    title=\"Listar elementos\"\n                    number=\"1\"\n                    description={''}\n                />\n                <Tarea\n                    language=\"jsx\"\n                    code={code02.trim()}\n                    title=\"Listar Componentes\"\n                    number=\"2\"\n                    description={''}\n                />\n                <Tarea\n                    language=\"jsx\"\n                    code={code03.trim()}\n                    title=\"Manejo de Input\"\n                    number=\"3\"\n                    description={''}\n                />\n                <Tarea\n                    language=\"bash\"\n                    code={``.trim()}\n                    title=\"Desarrollar una Landing Page\"\n                    number=\"4\"\n                    description={desc04.trim()}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Mod04\n","import Mod01 from './Mod01/Mod01'\nimport Mod02 from './Mod02/Mod02'\nimport Mod03 from './Mod03/Mod03'\nimport Mod04 from './Mod04/Mod04'\n\nconst Clase02 = ({ info }) => {\n    return (\n        <div>\n            <h1>{info.title}</h1>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod01 />\n                </div>\n            </div>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod02 />\n                </div>\n            </div>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod03 />\n                </div>\n            </div>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod04 />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Clase02\n","import Tarea from \"../../components/Tarea\";\n\nconst title = \"CONDITIONAL RENDERING\";\n\nconst Mod01 = () => {\n  return (\n    <div>\n      <h2>{title}</h2>\n      <div>\n        <Tarea\n          language=\"bash\"\n          code={``.trim()}\n          title=\"Render condicional\"\n          number=\"1\"\n          description={\"\"}\n        />\n      </div>\n      <iframe\n        type=\"text/javascript\"\n        frameborder=\"0\"\n        style={{ width: \"100%\", height: \"490px\" }}\n        title=\"react-conditional-rendering.tsx\"\n        src=\"https://gist.github.com/docentedev/0c9a151009ef92a7e4e4def7315b7de1.pibb\"\n      ></iframe>\n      <Tarea\n        language=\"bash\"\n        code={``.trim()}\n        title=\"React lazy\"\n        number=\"2\"\n        description={\n          \"[React Lazy](https://es.reactjs.org/docs/code-splitting.html#reactlazy)\"\n        }\n      />\n      <iframe\n        type=\"text/javascript\"\n        frameborder=\"0\"\n        style={{ width: \"100%\", height: \"580px\" }}\n        title=\"react-lazy.tsx\"\n        src=\"https://gist.github.com/docentedev/dede0747d93203375748939d9cb3c5df.pibb\"\n      ></iframe>\n    </div>\n  );\n};\n\nexport default Mod01;\n","import Tarea from \"../../components/Tarea\";\n\nconst title = \"MANEJO DE RUTAS CON REACT-ROUTER\";\n\nconst Mod02 = () => {\n  return (\n    <div>\n      <h2>{title}</h2>\n      <div>\n        <Tarea\n          language=\"bash\"\n          code={``.trim()}\n          title=\"\"\n          number=\"1\"\n          description={`\nEs un conjunto de componentes de navegación que podemos utilizar en nuestra aplicación web\n[React Router Dom](https://reactrouter.com/web/guides/quick-start)\n\n[Quick Start](https://reactrouter.com/web/guides/quick-start)\n\n\\`npm install react-router-dom\\`\n\n\\`\\`\\`js\nconst products = [\n  { name: 'TV Led 70', price: '$599.990', description: 'El LED Samsung 70 TU6900 Crystal UHD 4K Smart TV te dará una experiencia nueva en imágenes y sonidos que, de tan realistas, te harán sentir que estás dentro de la pantalla. Su tecnología Crystal Display entrega una gama mucho más amplia de la que has visto hasta ahora, porque cuenta con más pixeles en la superficie. También mejora la nitidez y el contraste para que percibas cada detalle gracias a su procesador Crystal UHD 4K. Pero también podrás usar tu televisor como si fuera una gran pantalla de computador y sin necesidad de cables, cuestión que agradecerán quienes optaron por el teletrabajo (verifica si esta función está disponible en tus dispositivos, ya que su disponibilidad puede variar según el modelo y la región). ¿Y si quisieras proyectar películas o música desde tu smartphone Samsung? También se puede, y se logran con un solo toque. Y porque la estética también importa, te gustará saber que este televisor puede mantener todos los cables ordenados, para mantener un ambiente más pulcro y armónico.', id: '12312321313423511X' },\n  { name: 'XBOX One X', price: '$449.990', description: 'Los juegos son mejores en Xbox One X. Con un 40% más de potencia que cualquier otra consola, disfruta de los juegos en un envolvente 4K real. Los títulos de lanzamiento tienen un...', id: '4354958345988935' },\n  { name: 'PS5', description: 'Consola Digital PS5 Sony', price: '$519.990', id: '093481110934589032' },\n  { name: 'Cama 2 Plazas', description: 'Cama americana excellence 2 plazas + almohadas', price: '$159.990', id: 'ADKFHJA3452342345' },\n]\n\\`\\`\\`\n\nCrear dentro de src\n\n\\`\\`\\`\ncomponents\ncontainers\n    home\n    contact\n    products\n    product-detail\n    404\n    store\n\\`\\`\\`\n\nURLS\n\\`\\`\\`\n/home\n/product\n/product/:id\n/contact\n\\`\\`\\`\n`}\n        />\n        <iframe\n          type=\"text/javascript\"\n          frameborder=\"0\"\n          style={{ width: \"100%\", height: \"1500px\" }}\n          title=\"react-router-dom-01.jsx\"\n          src=\"https://gist.github.com/docentedev/ef15ec9e8005bddc6afea38a61cc58b4.pibb\"\n        ></iframe>\n      </div>\n    </div>\n  );\n};\n\nexport default Mod02;\n","import Tarea from '../../components/Tarea'\n\nconst title = 'PERSISTENCIA DE DATOS'\n\nconst description = `\nPara persistir primero vamos a crear una escructura de datos que nos permita luego persistirlos todos juntos en el \\`localStorage\\`\n\n\\`npm install redux react-redux\\`\n\n[ejemplo](https://github.com/docentedev/c__react-redux-persist)\n\n`.trim()\n\nconst description01 = `\n`.trim()\n\nconst Mod03 = () => {\n\n    return (\n        <div>\n            <h2>{title}</h2>\n            <div>\n                <Tarea\n                    language=\"bash\"\n                    code={``.trim()}\n                    title=\"Manejar datos con Redux\"\n                    number=\"1\"\n                    description={description}\n                />\n                <Tarea\n                    language=\"bash\"\n                    code={``.trim()}\n                    title=\"Creando un Store con Redux\"\n                    number=\"2\"\n                    description={description01}\n                />\n                <iframe\n                    type=\"text/javascript\"\n                    frameborder=\"0\"\n                    style={{ width: \"100%\", height: \"2140px\" }}\n                    title=\"redux_store_counter_module.ts\"\n                    src=\"https://gist.github.com/docentedev/6597a32cc5cc9cd1b5bfafef04184972.pibb\"\n                ></iframe>\n                <Tarea\n                    language=\"bash\"\n                    code={``.trim()}\n                    title=\"Integrando en React con Redux gracias a React Redux\"\n                    number=\"3\"\n                    description={''}\n                />\n                <iframe\n                    type=\"text/javascript\"\n                    frameborder=\"0\"\n                    style={{ width: \"100%\", height: \"1300px\" }}\n                    title=\"redux_integrate_with_react.tsx\"\n                    src=\"https://gist.github.com/docentedev/412becebfae5c6a98386ea5b89a328b5.pibb\"\n                ></iframe>\n            </div>\n        </div>\n    )\n}\n\nexport default Mod03\n","import Tarea from '../../components/Tarea'\n\nconst title = 'EJERCICIO PRÁCTICO'\n\nconst Mod04 = () => {\n\n    return (\n        <div>\n            <h2>{title}</h2>\n            <div>\n                <Tarea\n                    language=\"bash\"\n                    code={``.trim()}\n                    title=\"\"\n                    number=\"1\"\n                    description={''}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Mod04\n","import Mod01 from './Mod01/Mod01'\nimport Mod02 from './Mod02/Mod02'\nimport Mod03 from './Mod03/Mod03'\nimport Mod04 from './Mod04/Mod04'\n\nconst Clase03 = ({ info }) => {\n    return (\n        <div>\n            <h1>{info.title}</h1>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod01 />\n                </div>\n            </div>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod02 />\n                </div>\n            </div>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod03 />\n                </div>\n            </div>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod04 />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Clase03\n","import Tarea from '../../components/Tarea'\n\nconst title = 'CONSUMIENDO DATOS DESDE UNA API'\n\nconst Mod01 = () => {\n\n    return (\n        <div>\n            <h2>{title}</h2>\n            <div>\n                <Tarea\n                    language=\"bash\"\n                    code={``.trim()}\n                    title=\"\"\n                    number=\"1\"\n                    description={''}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Mod01\n","import Tarea from '../../components/Tarea'\n\nconst title = 'PROYECTO FINAL – PARTE I'\n\nconst Mod02 = () => {\n\n    return (\n        <div>\n            <h2>{title}</h2>\n            <div>\n                <Tarea\n                    language=\"bash\"\n                    code={``.trim()}\n                    title=\"\"\n                    number=\"1\"\n                    description={''}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Mod02\n","import Tarea from '../../components/Tarea'\n\nconst title = 'PROYECTO FINAL – PARTE II'\n\nconst Mod03 = () => {\n\n    return (\n        <div>\n            <h2>{title}</h2>\n            <div>\n                <Tarea\n                    language=\"bash\"\n                    code={``.trim()}\n                    title=\"\"\n                    number=\"1\"\n                    description={''}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Mod03\n","import Tarea from '../../components/Tarea'\n\nconst title = 'PROYECTO FINAL – PARTE III'\n\nconst Mod04 = () => {\n\n    return (\n        <div>\n            <h2>{title}</h2>\n            <div>\n                <Tarea\n                    language=\"bash\"\n                    code={``.trim()}\n                    title=\"\"\n                    number=\"1\"\n                    description={''}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Mod04\n","import Mod01 from './Mod01/Mod01'\nimport Mod02 from './Mod02/Mod02'\nimport Mod03 from './Mod03/Mod03'\nimport Mod04 from './Mod04/Mod04'\n\nconst Clase04 = ({ info }) => {\n    return (\n        <div>\n            <h1>{info.title}</h1>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod01 />\n                </div>\n            </div>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod02 />\n                </div>\n            </div>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod03 />\n                </div>\n            </div>\n            <div className=\"my-4 card\">\n                <div className=\"card-body\">\n                    <Mod04 />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Clase04\n","import React from 'react'\nimport hljs from 'highlight.js'\nimport {\n  Switch,\n  Route,\n  NavLink,\n  useLocation,\n} from 'react-router-dom'\nimport LogoSvg from './logo.svg'\nimport Info from './Info.json'\nimport './App.css'\nimport Clase01 from './Clase01/Clas01'\nimport Clase02 from './Clase02/Clase02'\nimport Clase03 from './Clase03/Clase03'\nimport Clase04 from './Clase04/Clase04'\n\nconst NavItem = ({ to, n }) => (\n  <li className=\"nav-item\">\n    <NavLink\n      className=\"nav-link\"\n      activeClassName=\"active\"\n      exact\n      to={to}\n    >Clase {n}</NavLink>\n  </li>\n)\n\nfunction App() {\n  const location = useLocation()\n  React.useEffect(() => {\n    if (location) hljs.highlightAll()\n  }, [location])\n\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <ul className=\"navbar-nav\">\n                <li>\n                  <img src={LogoSvg} alt=\"React\" width=\"57\" height=\"40\" />\n                </li>\n                <NavItem to=\"/\" n={1} />\n                <NavItem to=\"/clase-2\" n={2} />\n                <NavItem to=\"/clase-3\" n={3} />\n                <NavItem to=\"/clase-4\" n={4} />\n              </ul>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <div className=\"App container mt-4\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Clase01 info={Info.clase01} />\n          </Route>\n          <Route path=\"/clase-2\">\n            <Clase02 info={Info.clase02} />\n          </Route>\n          <Route path=\"/clase-3\">\n            <Clase03 info={Info.clase03} />\n          </Route>\n          <Route path=\"/clase-4\">\n            <Clase04 info={Info.clase04} />\n          </Route>\n        </Switch>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  // BrowserRouter\n  HashRouter as Router,\n} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'highlight.js/styles/dracula.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}